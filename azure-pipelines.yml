# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

stages:
- stage: build_test_push
  displayName: Build, Test, and Push
  jobs:
  - job: test
    displayName: Test
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
      displayName: 'Use Python 3.8'
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'
    - script: |
        pip install pytest pytest-cov
        pytest --ignore=tests/infra --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html        
      displayName: 'Test with pytest'
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs: 
       testResultsFiles: '**/test-*.xml'
       testRunTitle: 'Publish test results for Python'
  - job: build_push
    displayName: Build and Push
    pool: build-docker
    steps:
    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        containerRegistry: 'publish-datateam-docker-dev-local'
        command: 'login'
    - task: Docker@2
      displayName: 'Build and Push'
      inputs:
        containerRegistry: 'publish-datateam-docker-dev-local'
        repository: 'checkrunner-api'
        command: 'buildAndPush'
        DockerFile: '**/Dockerfile'
        tags: '$(Build.BuildId)-$(Build.SourceVersion)'
    - task: Docker@2
      displayName: 'Logout of ACR'
      inputs:
        containerRegistry: 'publish-datateam-docker-dev-local'
        command: 'logout'
    - publish: $(System.DefaultWorkingDirectory)
      artifact: checkrunner-api
