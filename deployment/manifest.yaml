---
apiVersion: v1
kind: Service
metadata:
  name: checkrunner-api
  labels:
    team: datateam
    app: checkrunner
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
    name: checkhttp
  selector:
    run: checkrunner-api
  type: NodePort
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: checkrunner-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: checkrunner-api
          servicePort: 5000
        path: "/checkrunner(/|$)(.*)"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkrunner-api
  labels:
    team: datateam
    app: checkrunner
spec:
  selector:
    matchLabels:
      run: checkrunner-api
  replicas: 2
  template:
    metadata:
      labels:
        team: datateam
        app: checkrunner
        run: checkrunner-api
    spec:
      containers:
      - name: checkrunner-api-container
        image: echogl-datateam-docker-dev-local.jfrog.io/checkrunner-api:71497-e531698c140c469c92946e9638991a682dcadc63
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: checkrunner-api-config
        - secretRef:
            name: checkrunner-api-secret
        env:
        - name: DB_ODS_ODSVAULT
          value: DRIVER={$(SQL_DRIVER)};SERVER=$(ODS_SERVER);DATABASE=$(ODS_VAULT);UID=$(SQL_USER);PWD=$(SQL_PASSWORD)
        - name: DB_ODS_ODSMARTTRACKING
          value: DRIVER={$(SQL_DRIVER)};SERVER=$(ODS_SERVER);DATABASE=$(ODS_MART_TRACKING);UID=$(SQL_USER);PWD=$(SQL_PASSWORD)
        - name: DB_ODS_MARTSOURCING
          value: DRIVER={$(SQL_DRIVER)};SERVER=$(ODS_SERVER);DATABASE=$(ODS_MART_SOURCING);UID=$(SQL_USER);PWD=$(SQL_PASSWORD)
        - name: DB_ODS_ODSMARTTLQUOTING
          value: DRIVER={$(SQL_DRIVER)};SERVER=$(ODS_SERVER);DATABASE=$(ODS_MART_TL_QUOTING);UID=$(SQL_USER);PWD=$(SQL_PASSWORD)
        - name: DB_ODS_ODSLOG
          value: DRIVER={$(SQL_DRIVER)};SERVER=$(ODS_SERVER);DATABASE=$(ODSLog);UID=$(SQL_USER);PWD=$(SQL_PASSWORD)
        - name: DB_DB01_ECHOOPTIMIZER
          value: DRIVER={$(SQL_DRIVER)};SERVER=$(DB01_SERVER);DATABASE=$(EchoOptimizer);UID=$(SQL_USER);PWD=$(SQL_PASSWORD)
        - name: DB_DB01_ODSINTEGRATION
          value: DRIVER={$(SQL_DRIVER)};SERVER=$(DB01_SERVER);DATABASE=$(ODSIntegration);UID=$(SQL_USER);PWD=$(SQL_PASSWORD)
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "250Mi"
            cpu: "100m"
          limits:
            memory: "750Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /alive
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 4
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 4
          timeoutSeconds: 3
      imagePullSecrets:
        - name: artifactory-cloud-datateam
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 30
